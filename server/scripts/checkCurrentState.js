const mongoose = require('mongoose');
const Assignment = require('../models/AssignmentModel');
const User = require('../models/userModel');
const Project = require('../models/projectModel');

// Connexion √† la base de donn√©es
mongoose.connect("mongodb+srv://walidchaffar:PFE2025@pfecluster.vkdu7.mongodb.net/PFEDB?retryWrites=true&w=majority&appName=PFECluster");

const checkCurrentState = async () => {
  try {
    console.log('üîç V√©rification de l\'√©tat actuel de la base...\n');

    // V√©rifier avec le bon nom de champ : 'owner' et non 'Owner'
    const assignments = await Assignment.find()
      .populate('project', 'projectName owner')
      .populate('Owner', 'fullName');

    console.log(`üìä Total affectations: ${assignments.length}`);

    let validManagerProject = 0;
    let invalidManagerProject = 0;
    let missingData = 0;

    for (const assignment of assignments) {
      if (!assignment.project || !assignment.Owner) {
        missingData++;
        continue;
      }

      // Utiliser 'owner' (minuscule) au lieu de 'Owner'
      const projectOwnerId = assignment.project.owner?.toString();
      const assignmentOwnerId = assignment.Owner._id.toString();

      if (projectOwnerId === assignmentOwnerId) {
        validManagerProject++;
      } else {
        invalidManagerProject++;
      }
    }

    console.log('\nüéâ R√âSULTATS ACTUELS:');
    console.log(`‚úÖ Affectations Manager-Projet coh√©rentes: ${validManagerProject}`);
    console.log(`‚ùå Affectations Manager-Projet incoh√©rentes: ${invalidManagerProject}`);
    console.log(`üö´ Donn√©es manquantes: ${missingData}`);

    const successRate = ((validManagerProject / assignments.length) * 100).toFixed(1);
    console.log(`üìà Taux de coh√©rence Manager-Projet: ${successRate}%`);

    // V√©rifier quelques projets
    console.log('\nüìã EXEMPLES DE PROJETS:');
    const projects = await Project.find().populate('owner', 'fullName').limit(5);
    
    for (const project of projects) {
      const assignmentCount = await Assignment.countDocuments({ project: project._id });
      console.log(`üéØ ${project.projectName}:`);
      console.log(`   Propri√©taire: ${project.owner?.fullName || 'Non d√©fini'}`);
      console.log(`   Affectations: ${assignmentCount}`);
    }

    if (validManagerProject > 3000) {
      console.log('\nüéâ EXCELLENT ! La majorit√© des donn√©es sont maintenant coh√©rentes !');
      console.log('üëâ Vous devriez maintenant voir les affectations dans Time & Workload !');
    } else if (validManagerProject > 1000) {
      console.log('\nüëç BIEN ! Une bonne partie des donn√©es sont coh√©rentes !');
    } else {
      console.log('\n‚ö†Ô∏è Il reste encore des corrections √† faire...');
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  } finally {
    mongoose.connection.close();
  }
};

checkCurrentState();